<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
								xmlns:f="http://xmlns.jcp.org/jsf/core"
								xmlns:h="http://java.sun.com/jsf/html"
								xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
								xmlns:p="http://primefaces.org/ui"
								template="/templates/masterLayout.xhtml">
	<ui:define name="content">
		<f:loadBundle var="msg" basename="com.ail.crxmarkets.rainyHills.rainyHills"/>

		<p:panel id="formPanel" styleClass="margin-top-bottom">
			<h:form id="paramsForm">
				<p:messages id="messages" showDetail="true" autoUpdate="true" closable="true"/>
				<h:panelGrid id="paramsPanel" columns="2">

					<h:panelGroup>
						<h:panelGrid columns="1" styleClass="margin-bottom" cellpadding="5">
							<p:outputLabel for="textArea" value="#{msg['inputSurfaceData']}:"/>
							<p:inputTextarea id="textArea" rows="1" cols="50" completeMethod="#{mbRainyHills.textArea}"/>
						</h:panelGrid>
					</h:panelGroup>

					<h:panelGroup>
						<h:panelGrid columns="1" cellpadding="5" styleClass="margin-bottom">
							<p:commandButton value="#{msg['draw']}" action="#{mbRainyHills.draw()}" ajax="true" update="surfacePanel,infoPanel"/>
						</h:panelGrid>
					</h:panelGroup>

					<h:panelGroup>
						<h:panelGrid columns="2" border="0" cellpadding="5" cellspacing="2">
							<h:panelGroup>
								<h:panelGrid columns="1" cellpadding="5" styleClass="margin-bottom">
									<h:outputText id="genSurfaceLengthOut" value="#{msg['length']}: #{mbRainyHills.surfaceLength}"/>
									<p:slider for="genSurfaceLengthIn" display="genSurfaceLengthOut" style="width: 200px" displayTemplate="#{msg['length']}: {value}"/>
								</h:panelGrid>
								<h:inputHidden id="genSurfaceLengthIn" value="#{mbRainyHills.surfaceLength}"/>
							</h:panelGroup>

							<h:panelGroup>
								<h:panelGrid columns="1" cellpadding="5" styleClass="margin-bottom">
									<h:outputText id="surfaceHeightRange" value="#{msg['heightBetween']} #{mbRainyHills.surfaceMinHeight} #{msg['and']} #{mbRainyHills.surfaceMaxHeight}"/>
									<p:slider for="surfaceMinHeight,surfaceMaxHeight" display="surfaceHeightRange" style="width: 400px" range="true" displayTemplate="#{msg['heightBetween']} {min} #{msg['and']} {max}"/>
								</h:panelGrid>
								<h:inputHidden id="surfaceMinHeight" value="#{mbRainyHills.surfaceMinHeight}"/>
								<h:inputHidden id="surfaceMaxHeight" value="#{mbRainyHills.surfaceMaxHeight}"/>
							</h:panelGroup>
						</h:panelGrid>
					</h:panelGroup>

					<h:panelGroup>
						<h:panelGrid columns="1" cellpadding="5" styleClass="margin-bottom">
							<p:commandButton value="#{msg['generate']}" action="#{mbRainyHills.generate()}" ajax="true" update="surfacePanel, infoPanel"/>
						</h:panelGrid>
					</h:panelGroup>

					<h:panelGroup>
						<h:panelGrid columns="2" styleClass="margin-bottom" cellpadding="5">
							<p:outputLabel for="calculationMethod" value="#{msg['calculationMethod']}:"/>
							<p:selectOneRadio id="calculationMethod" value="#{mbRainyHills.calculationMethod}">
								<f:selectItem itemLabel="#{msg['vesselMethod']}" itemValue="VESSEL"/>
								<f:selectItem itemLabel="#{msg['towerMethod']}" itemValue="TOWER"/>
							</p:selectOneRadio>
						</h:panelGrid>
					</h:panelGroup>

					<h:panelGroup>
						<h:panelGrid columns="1" cellpadding="5" styleClass="margin-bottom">
							<p:commandButton value="#{msg['calculate']}" action="#{mbRainyHills.calculate()}" ajax="true" update="surfacePanel,infoPanel"/>
						</h:panelGrid>
					</h:panelGroup>

				</h:panelGrid>
			</h:form>
		</p:panel>

		<p:panel id="surfacePanel" styleClass="margin-top-bottom">
			<p:chart id="surface" type="bar" model="#{mbRainyHills.stackedVerticalModel}" style="height:400px"/>
		</p:panel>

		<p:panel id="infoPanel" styleClass="margin-bottom">
			<h:panelGrid columns="2" border="0" cellpadding="5" cellspacing="2">
				<h:outputText value="#{msg['totalWaterAmount']}:" styleClass="bold-text"/>
				<h:outputText value="#{mbRainyHills.totalWaterAmount}"/>

				<h:outputText value="#{msg['calculationTime']}:" styleClass="bold-text"/>
				<h:outputText value="#{mbRainyHills.calcuationTime} #{msg['nanoseconds']}"/>
			</h:panelGrid>
		</p:panel>

	</ui:define>
</ui:composition>